<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2011  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="HomeView" 
		initialize="init()" 
		creationComplete="onCreationComplete()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("general")]
	</fx:Metadata>
	
	
	<fx:Script>
		<![CDATA[
			import model.ModelLocator;
			
			import mx.collections.ArrayCollection;
			import mx.resources.ResourceManager;
			
			import spark.events.IndexChangeEvent;
			private var menuList:ArrayCollection = 	new ArrayCollection([
				ResourceManager.getInstance().getString("general","foodcounter"),
				ResourceManager.getInstance().getString("general","tracking"),
				/*ResourceManager.getInstance().getString("general","foodtable"),*/
				/*ResourceManager.getInstance().getString("general","synchronize"),*/
				ResourceManager.getInstance().getString("general","settings"),
				ResourceManager.getInstance().getString("general","infoabout")
			]);	
			
			private function init():void {
				/* add event listener for clicking item */
				homeScreenList.addEventListener(Event.CHANGE,selectedElementChanged);
			}
			

			
			/**
			 * will popup a view corresponding to the selected menu
			 */
			private function selectedElementChanged(event:IndexChangeEvent):void {
				switch (event.newIndex) {
					case 0:
						navigator.pushView(FoodCounterView);
						break;
					case 1:
						ModelLocator.getInstance().initializeTrackingView = true;
						ModelLocator.getInstance().initializeTrackingViewTo = ModelLocator.getInstance().trackingList.length - 1;
						navigator.pushView(TrackingView);
						break;
					/*case 2:
						navigator.pushView(FoodTableView);
						break;
					case 3:
						navigator.pushView(SynchronizeView);
						break;*/
					case 2:
						navigator.pushView(SettingsView);
						break;
					case 3:
						navigator.pushView(InfoAndHelpView);
						break;
				}
			}
			
			/**
			 * what I achieve here is that after HomeView is created, the dummyView will be pushed<br>
			 * When dummyView is popped, then data will be a boolean value being set to true, in which case dummyView will not be pushed again. 
			 */
			private function onCreationComplete():void {
				if (data)
					if (data is Boolean)
						if ((data as Boolean) == true)
							return
							
				data = new Boolean(true);
				navigator.pushView(dummyView);
			}
		]]>
	</fx:Script>
	
	<s:List id="homeScreenList" left="0" right="0" top="0" bottom="0" itemRenderer="myComponents.MenuElementItemRenderer"
			dataProvider="{menuList}">
 
	</s:List>
</s:View>

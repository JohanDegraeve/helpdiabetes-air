<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2013  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="view1_creationCompleteHandler(event)">
	
	<fx:Metadata>
		[ResourceBundle("settingsmealprofilesview")]
		[ResourceBundle("analytics")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.resources.ResourceManager;
			
			import spark.events.IndexChangeEvent;
			
			import databaseclasses.Settings;
			
			import myComponents.MealProfileItemRenderer;
			
			[Bindable]
			private var back_label:String;
			
			[Bindable]
			/**
			 * topText shown on top of the view.
			 */private var topText:String;
			
			[Bindable]
			
			private var listOfElements:ArrayCollection;
			private var graphClicked:Boolean;
			
			private function view1_creationCompleteHandler(event:FlexEvent):void {
				back_label = resourceManager.getString('general','back');
				title = resourceManager.getString('settingsview','mealprofiles');

				topText = resourceManager.getString('settingsmealprofilesview','edit_meal_profiles');
				listOfElements = new ArrayCollection();
				for (var i:int = Settings.SettingsMeal1GraphDescription;i <= Settings.SettingsMeal10GraphDescription; i++)
					listOfElements.addItem(Settings.getInstance().getSetting(i));
				list.addEventListener(MealProfileItemRenderer.GRAPH_CLICKED,editGraph);
			}
			
			private function editGraph(event:Event):void {
				graphClicked = true;
			}

			protected function list_changeHandler(event:IndexChangeEvent):void
			{
				if (graphClicked) {
					graphClicked = false;
					var dataToSend:Object = new Object();
					dataToSend.title = ResourceManager.getInstance().getString("settingsmealprofilesview","meal_profile");
					dataToSend.topText = Settings.getInstance().getSetting(Settings.SettingsMeal1GraphDescription + event.newIndex);
					
					dataToSend.settingid1 = event.newIndex * 4 + Settings.SettingsMeal1_range1_AOBChart;
					dataToSend.settingid2 = event.newIndex * 4 + Settings.SettingsMeal1_range1_AOBChart + 1;
					dataToSend.settingid3 = event.newIndex * 4 + Settings.SettingsMeal1_range1_AOBChart + 2;
					dataToSend.settingid4 = event.newIndex * 4 + Settings.SettingsMeal1_range1_AOBChart + 3;
					dataToSend.settingidActive = event.newIndex + Settings.SettingsMeal1_AOBActive;
					navigator.pushView(FromtimeAndValueOverviewView,dataToSend);

				} else  {
					//description has been clicked so edit it
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:navigationContent>
		<s:Button   label="{back_label}" id="backButton" click="navigator.popView()" height="48"/>
	</s:navigationContent>
	<s:Group y="0" x="0" width="100%" height = "100%"  left="5" top="5" right="5">
		<s:layout>
			<s:VerticalLayout>
			</s:VerticalLayout>
		</s:layout>
		<s:Label y="0" x="0" width="100%" height="75" text="@{topText}" textAlign="center" verticalAlign="middle"/>
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke color="0xcccccc" weight="1"/>
			</s:stroke>
		</s:Line>	
		<s:List id="list" width="100%" height="100%" itemRenderer="myComponents.MealProfileItemRenderer"
				dataProvider="{listOfElements}" 
				change="list_changeHandler(event)"
				scrollSnappingMode="leadingEdge">
		</s:List>
	</s:Group>
	
</s:View>

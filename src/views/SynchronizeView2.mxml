<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2013  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<!--
Not the initial setup of sync settings, meaning Synchronizeview shown when google authorisation is already done
-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 		
		initialize="onInitialize()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
			[ResourceBundle("synchronizeview")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			import mx.resources.ResourceManager;
			
			import spark.events.IndexChangeEvent;
			import spark.events.PopUpEvent;
			
			import air.net.URLMonitor;
			
			import databaseclasses.Settings;
			
			import model.ModelLocator;
			
			import myComponents.AlertPopUp;
			
			[Bindable]
			private var back_label:String;
			private var alertPopUp:AlertPopUp;
			private var monitor:URLMonitor;
			
			[Bindable]
			private var menuList:ArrayCollection = 	new ArrayCollection([
				ModelLocator.resourceManagerInstance.getString("synchronizeview","menuitem_downloadfoodtable"),
				ModelLocator.resourceManagerInstance.getString("synchronizeview","menuitem_exporttracking"),
				"NightScout",
				ModelLocator.resourceManagerInstance.getString("synchronizeview","help"),
				ModelLocator.resourceManagerInstance.getString("synchronizeview","removegoogleauthorization"),
				"Show recent Google Sync Errors"
			]);	

			private function onInitialize():void {
				if (Settings.getInstance().getSetting(Settings.SettingsRefreshToken) == "") {
					if (navigator)
						navigator.popToFirstView();
					return;
				}
								
				monitor = new URLMonitor(new URLRequest("http://www.google.com"));
				monitor.addEventListener(StatusEvent.STATUS, statusEventHandler);
				monitor.start();
				
				back_label = resourceManager.getString('general','back');
				title = resourceManager.getString('synchronizeview','titlesettingssync');
				menulist.addEventListener(Event.CHANGE,selectedElementChanged);
			}
			
			private function statusEventHandler(event:StatusEvent):void {
				monitor.removeEventListener(StatusEvent.STATUS, statusEventHandler);
				if (event.code != "Service.available") {
					alertPopUp = new AlertPopUp();
					alertPopUp.addEventListener(PopUpEvent.CLOSE, okClicked);
					alertPopUp.show(this);
					alertPopUp.setMessage(resourceManager.getString('settingsview','internetnotavailable'));
				}
			}
			
			private function selectedElementChanged(event:IndexChangeEvent):void {
				switch (event.newIndex) {
					case 0:
						navigator.pushView(DownloadFoodTableView);
						break;
					case 1:
						navigator.pushView(UploadTrackingView);
						break;
					case 2:
						navigator.pushView(SettingsNightScoutView);
						break;
					case 3:
						navigateToURL(new URLRequest(resourceManager.getString('synchronizeview','helpurl')));
						break;
					case 4 :
						Settings.getInstance().setSetting(Settings.SettingsAccessToken,"");
						Settings.getInstance().setSetting(Settings.SettingsLastGoogleSyncTimeStamp,"0");
						Settings.getInstance().setSetting(Settings.SettingsNightScoutHashedAPISecret,"");//also nightscoutsync is reset
						trace("night scout api secret reset to blanc, Synchronizeview2");
						Settings.getInstance().setSetting(Settings.SettingsNightScoutAPISECRET,Settings.NightScoutDefaultAPISECRET);//also nightscoutsync is reset
						Settings.getInstance().setSetting(Settings.SettingsLastNightScoutSyncTimeStamp,"0");
						alertPopUp = new AlertPopUp();
						alertPopUp.addEventListener(PopUpEvent.CLOSE, okClicked);
						alertPopUp.show(this);
						alertPopUp.setMessage(resourceManager.getString('synchronizeview','googlesyncremoved'));
						break;
					case 5 :
						navigator.pushView(GoogleSyncErrorsView);
						break;
				}
			}
			
			private function okClicked(event: PopUpEvent):void {
				if (alertPopUp != null) {
					PopUpManager.removePopUp(alertPopUp);
					if (alertPopUp.hasEventListener(PopUpEvent.CLOSE)) {
						alertPopUp.removeEventListener(PopUpEvent.CLOSE, okClicked);
					}
				}
				if (navigator)
					navigator.popToFirstView();
			}

			
		]]>
	</fx:Script>
	<s:navigationContent>
		<s:Button   label="{back_label}" id="backButton" click="navigator.popView()" height="48"/>
	</s:navigationContent>
	<s:List id="menulist" left="0" right="0" top="0" bottom="0" itemRenderer="myComponents.MenuElementItemRenderer"
			dataProvider="{menuList}">
	</s:List>
</s:View>

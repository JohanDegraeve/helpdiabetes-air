<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2013  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title=""
		backKeyPressed="onBackKeyPressed(event)"
		creationComplete="view1_creationCompleteHandler(event)"
		initialize="view1_initializeHandler(event)">
	
	<fx:Metadata>
		[ResourceBundle("settingsmedicinview")]
		[ResourceBundle("analytics")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.resources.ResourceManager;
			
			import spark.events.PopUpEvent;
			import spark.events.TextOperationEvent;
			
			import databaseclasses.Settings;
			
			import model.ModelLocator;
			
			import myComponents.AlertPopUp;
			import myComponents.HelpCallOut;
			import myComponents.PickerEvent;
			
			import utilities.MyGATracker;
			import utilities.Synchronize;
			
			[Bindable] private var medicinText1:String = "";
			[Bindable] private var medicinText2:String = "";
			[Bindable] private var medicinText3:String = "";
			[Bindable] private var medicinText4:String = "";
			[Bindable] private var medicinText5:String = "";
			[Bindable]
			private var back_label:String;
			private var alertPopUp:AlertPopUp;
			
			private var helpCallOut:HelpCallOut;
			
			private function onBackKeyPressed(event:Event):void {
				Settings.getInstance().setSetting(Settings.SettingsInsulinType1,medicinText1);
				Settings.getInstance().setSetting(Settings.SettingsInsulinType2,medicinText2);
				Settings.getInstance().setSetting(Settings.SettingsInsulinType3,medicinText3);
				Settings.getInstance().setSetting(Settings.SettingsInsulinType4,medicinText4);
				Settings.getInstance().setSetting(Settings.SettingsInsulinType5,medicinText5);
			}
			
			protected function view1_initializeHandler(event:FlexEvent):void
				
			{
				back_label = resourceManager.getString('general','back');
				medicinText1 = Settings.getInstance().getSetting(Settings.SettingsInsulinType1);
				medicinText2 = Settings.getInstance().getSetting(Settings.SettingsInsulinType2);
				medicinText3 = Settings.getInstance().getSetting(Settings.SettingsInsulinType3);
				medicinText4 = Settings.getInstance().getSetting(Settings.SettingsInsulinType4);
				medicinText5 = Settings.getInstance().getSetting(Settings.SettingsInsulinType5);
			}
			
			protected function type1_changeHandler(event:TextOperationEvent):void
			{
				if (medicinText1 != Settings.getInstance().getSetting(Settings.SettingsInsulinType1)) {
					Settings.getInstance().setSetting(Settings.SettingsInsulinType1,medicinText1);
					Synchronize.getInstance().startSynchronize(true,false);
				}
			}
			
			protected function type2_changeHandler(event:TextOperationEvent):void
				
			{
				if (medicinText2 != Settings.getInstance().getSetting(Settings.SettingsInsulinType2)) {
					Settings.getInstance().setSetting(Settings.SettingsInsulinType2,medicinText2);
					Synchronize.getInstance().startSynchronize(true,false);
				}
			}
			
			protected function type3_changeHandler(event:TextOperationEvent):void
			{
				if (medicinText3 != Settings.getInstance().getSetting(Settings.SettingsInsulinType3)) {
					Settings.getInstance().setSetting(Settings.SettingsInsulinType3,medicinText3);
					Synchronize.getInstance().startSynchronize(true,false);
				}
			}
			
			protected function type4_changeHandler(event:TextOperationEvent):void
			{
				if (medicinText4 != Settings.getInstance().getSetting(Settings.SettingsInsulinType4)) {
					Settings.getInstance().setSetting(Settings.SettingsInsulinType4,medicinText4);
					Synchronize.getInstance().startSynchronize(true,false);
				}
			}
			
			protected function type5_changeHandler(event:TextOperationEvent):void
			{
				if (medicinText5 != Settings.getInstance().getSetting(Settings.SettingsInsulinType5)) {
					Settings.getInstance().setSetting(Settings.SettingsInsulinType5,medicinText5);
					Synchronize.getInstance().startSynchronize(true,false);
				}
			}
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				MyGATracker.getInstance().trackPageview( "SettingsMedicinView-viewOpened" );
				
				title = ResourceManager.getInstance().getString("settingsview","medicin");

				helpCallOut = new HelpCallOut();
				helpCallOut.helpText = resourceManager.getString('settingsmedicinview','help_text_changeMedicinTypes');
				helpCallOut.settingId = Settings.SettingsHelpTextMedicinViewChangeMedicinType;
				helpCallOut.addEventListener(PickerEvent.PICKER_SET,helptext1Removed);
				helpCallOut.open(type2,true);
			}
			
			private function helptext1Removed(event:Event):void  {
				helpCallOut.removeEventListener(PickerEvent.PICKER_SET,helptext1Removed);
				helpCallOut = new HelpCallOut();
				helpCallOut.helpText = resourceManager.getString('settingsmedicinview','help_text_enableInsulinProfile');
				helpCallOut.settingId = Settings.SettingsHelpTextEnableActiveInsulinCalculationInInsulinSettingsView;
				//helpCallOut.addEventListener(PickerEvent.PICKER_SET,helptext2Removed);
				helpCallOut.open(buttontype1,true);
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				showAlertNavigateToHelp();
				var dataToSend:Object = new Object();
				dataToSend.title = ResourceManager.getInstance().getString("settingsmedicinview","medicin_profile");
				dataToSend.topText = medicinText1;
				dataToSend.settingid1 = Settings.SettingsMedicin1_range1_AOBChart;
				dataToSend.settingid2 = Settings.SettingsMedicin1_range2_AOBChart;
				dataToSend.settingid3 = Settings.SettingsMedicin1_range3_AOBChart;
				dataToSend.settingid4 = Settings.SettingsMedicin1_range4_AOBChart;
				dataToSend.settingidActive = Settings.SettingsMedicin1_AOBActive;
				dataToSend.titleforFromtimeAndValueElementView = medicinText1;
				dataToSend.topTextforFromtimeAndValueElementView = ResourceManager.getInstance().getString("settingsmedicinview","addOrEditAtionProfile");
				navigator.pushView(FromtimeAndValueOverviewView,dataToSend);
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				showAlertNavigateToHelp();
				var dataToSend:Object = new Object();
				dataToSend.title = ResourceManager.getInstance().getString("settingsmedicinview","medicin_profile");
				dataToSend.topText = medicinText2;
				dataToSend.settingid1 = Settings.SettingsMedicin2_range1_AOBChart;
				dataToSend.settingid2 = Settings.SettingsMedicin2_range2_AOBChart;
				dataToSend.settingid3 = Settings.SettingsMedicin2_range3_AOBChart;
				dataToSend.settingid4 = Settings.SettingsMedicin2_range4_AOBChart;
				dataToSend.settingidActive = Settings.SettingsMedicin2_AOBActive;
				dataToSend.titleforFromtimeAndValueElementView = medicinText2;
				dataToSend.topTextforFromtimeAndValueElementView = ResourceManager.getInstance().getString("settingsmedicinview","addOrEditAtionProfile");
				navigator.pushView(FromtimeAndValueOverviewView,dataToSend);
			}
			
			protected function button3_clickHandler(event:MouseEvent):void
			{
				showAlertNavigateToHelp();
				var dataToSend:Object = new Object();
				dataToSend.title = ResourceManager.getInstance().getString("settingsmedicinview","medicin_profile");
				dataToSend.topText = medicinText3;
				dataToSend.settingid1 = Settings.SettingsMedicin3_range1_AOBChart;
				dataToSend.settingid2 = Settings.SettingsMedicin3_range2_AOBChart;
				dataToSend.settingid3 = Settings.SettingsMedicin3_range3_AOBChart;
				dataToSend.settingid4 = Settings.SettingsMedicin3_range4_AOBChart;
				dataToSend.settingidActive = Settings.SettingsMedicin3_AOBActive;
				dataToSend.titleforFromtimeAndValueElementView = medicinText3;
				dataToSend.topTextforFromtimeAndValueElementView = ResourceManager.getInstance().getString("settingsmedicinview","addOrEditAtionProfile");

				navigator.pushView(FromtimeAndValueOverviewView,dataToSend);
			}
			
			protected function button4_clickHandler(event:MouseEvent):void
			{
				showAlertNavigateToHelp();
				var dataToSend:Object = new Object();
				dataToSend.title = ResourceManager.getInstance().getString("settingsmedicinview","medicin_profile");
				dataToSend.topText = medicinText4;
				dataToSend.settingid1 = Settings.SettingsMedicin4_range1_AOBChart;
				dataToSend.settingid2 = Settings.SettingsMedicin4_range2_AOBChart;
				dataToSend.settingid3 = Settings.SettingsMedicin4_range3_AOBChart;
				dataToSend.settingid4 = Settings.SettingsMedicin4_range4_AOBChart;
				dataToSend.settingidActive = Settings.SettingsMedicin4_AOBActive;
				dataToSend.titleforFromtimeAndValueElementView = medicinText4;
				dataToSend.topTextforFromtimeAndValueElementView = ResourceManager.getInstance().getString("settingsmedicinview","addOrEditAtionProfile");
				navigator.pushView(FromtimeAndValueOverviewView,dataToSend);
			}
			
			protected function button5_clickHandler(event:MouseEvent):void
			{
				showAlertNavigateToHelp();
				var dataToSend:Object = new Object();
				dataToSend.title = ResourceManager.getInstance().getString("settingsmedicinview","medicin_profile");
				dataToSend.topText = medicinText5;
				dataToSend.settingid1 = Settings.SettingsMedicin5_range1_AOBChart;
				dataToSend.settingid2 = Settings.SettingsMedicin5_range2_AOBChart;
				dataToSend.settingid3 = Settings.SettingsMedicin5_range3_AOBChart;
				dataToSend.settingid4 = Settings.SettingsMedicin5_range4_AOBChart;
				dataToSend.titleforFromtimeAndValueElementView = medicinText5;
				dataToSend.topTextforFromtimeAndValueElementView = ResourceManager.getInstance().getString("settingsmedicinview","addOrEditAtionProfile");
				dataToSend.settingidActive = Settings.SettingsMedicin5_AOBActive;
				navigator.pushView(FromtimeAndValueOverviewView,dataToSend);
			}
			
			protected function showAlertNavigateToHelp():void
			{
				if (Settings.getInstance().getSetting(Settings.SettingsHelpTextMedicinProfile) == 'false')
					return;
				alertPopUp = new AlertPopUp();
				alertPopUp.addEventListener(PopUpEvent.CLOSE, okClicked);
				alertPopUp.show(this);
				alertPopUp.setMessage(
					resourceManager.getString('settingsmedicinview','redirecttohelp')
				);
				
				function okClicked(event: PopUpEvent):void {
					if (alertPopUp != null) {
						PopUpManager.removePopUp(alertPopUp);
						if (alertPopUp.hasEventListener(PopUpEvent.CLOSE)) {
							alertPopUp.removeEventListener(PopUpEvent.CLOSE, okClicked);
						}
					}
					navigateToURL(new URLRequest(resourceManager.getString('settingsmedicinview','redirecturl')));
					Settings.getInstance().setSetting(Settings.SettingsHelpTextMedicinProfile,'false');
				}
			}

			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:navigationContent>
		<s:Button   label="{back_label}" id="backButton" click="navigator.popView()" height="48"/>
	</s:navigationContent>
	<s:Group y="0" x="0" width="100%" height = "100%"  left="5" top="5" right="5">
		<s:layout>
			<s:VerticalLayout>
			</s:VerticalLayout>
		</s:layout>
		<s:Group y="0" x="0" width="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle">
				</s:HorizontalLayout>
			</s:layout>
			<s:TextInput  width="80%" contentBackgroundColor="0xDCDCDC" id="type1" text="@{medicinText1}" editable="true" borderVisible="false" textAlign="left" change="type1_changeHandler(event)" />
		 	<s:Button id="buttontype1" height="48" width="48" icon="@Embed('assets/graph3.png')" click="button1_clickHandler(event)" includeInLayout="{ModelLocator.getInstance().extendedFunctionsActive()}" visible="{ModelLocator.getInstance().extendedFunctionsActive()}"/>
		</s:Group>
		
		<s:Group y="0" x="0" width="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle">
				</s:HorizontalLayout>
			</s:layout>
			<s:TextInput  width="80%" contentBackgroundColor="0xDCDCDC" id="type2" text="@{medicinText2}" editable="true" borderVisible="false" textAlign="left" change="type2_changeHandler(event)"/>
			<s:Button height="48" width="48" icon="@Embed('assets/graph3.png')" click="button2_clickHandler(event)" includeInLayout="{ModelLocator.getInstance().extendedFunctionsActive()}" visible="{ModelLocator.getInstance().extendedFunctionsActive()}"/>
		</s:Group>
		
		<s:Group y="0" x="0" width="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle">
				</s:HorizontalLayout>
			</s:layout>
			<s:TextInput width="80%" contentBackgroundColor="0xDCDCDC" id="type3" text="@{medicinText3}" editable="true" borderVisible="false" textAlign="left" change="type3_changeHandler(event)"/>
			<s:Button height="48" width="48" icon="@Embed('assets/graph3.png')" click="button3_clickHandler(event)" includeInLayout="{ModelLocator.getInstance().extendedFunctionsActive()}" visible="{ModelLocator.getInstance().extendedFunctionsActive()}"/>
		</s:Group>
		
		<s:Group y="0" x="0" width="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle">
				</s:HorizontalLayout>
			</s:layout>
			<s:TextInput  width="80%" contentBackgroundColor="0xDCDCDC" id="type4" text="@{medicinText4}" editable="true" borderVisible="false" textAlign="left" change="type4_changeHandler(event)"/>
			<s:Button height="48" width="48" icon="@Embed('assets/graph3.png')" click="button4_clickHandler(event)" includeInLayout="{ModelLocator.getInstance().extendedFunctionsActive()}" visible="{ModelLocator.getInstance().extendedFunctionsActive()}"/>
		</s:Group>
		
		<s:Group y="0" x="0" width="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle">
				</s:HorizontalLayout>
			</s:layout>			
			<s:TextInput width="80%" contentBackgroundColor="0xDCDCDC" id="type5" text="@{medicinText5}" editable="true" borderVisible="false" textAlign="left" change="type5_changeHandler(event)"/>
			<s:Button height="48" width="48" icon="@Embed('assets/graph3.png')" click="button5_clickHandler(event)" includeInLayout="{ModelLocator.getInstance().extendedFunctionsActive()}" visible="{ModelLocator.getInstance().extendedFunctionsActive()}"/>
		</s:Group>
		<s:Group y="0" x="0" width="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle">
				</s:HorizontalLayout>
			</s:layout>			
			<s:Button width="100%" label="Help" click="{navigateToURL(new URLRequest(resourceManager.getString('settingsmedicinview','redirecturl')));}"/>
		</s:Group>
	</s:Group>
	
</s:View>

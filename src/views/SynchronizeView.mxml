<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="SynchronizeView"
		initialize="onInitialize()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("synchronizeview")]
		[ResourceBundle("client_secret")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.google.analytics.AnalyticsTracker;
			
			import databaseclasses.Settings;
			
			import flash.net.drm.AuthenticationMethod;
			import flash.net.navigateToURL;
			
			import mx.events.BrowserChangeEvent;
			import mx.managers.BrowserManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import utilities.MyGATracker;
			import utilities.Synchronize;
			
			
			private var _authorizationCode:String;
			
			private static var googleAuthUrl:String = "https://accounts.google.com/o/oauth2/token";

			[Bindable]
			private var back_label:String;
			
			[Bindable]
			private var alreadyAuthorised:Boolean;
			[Bindable]
			private var authorizationcodeTextAreaVisible:Boolean;
			[Bindable]
			private var topLabelText:String;
			

			[Bindable]
			private function get authorizationCode_text():String
			{
				return _authorizationCode;
			}

			private function set authorizationCode_text(value:String):void
			{
				_authorizationCode = value;
				if (value == "") return;
				
				buttonAuthenticateToGoogle.label = resourceManager.getString('synchronizeview','startsynchronizing') ;
				buttonAuthenticateToGoogle.visible = true;
				buttonAuthenticateToGoogle.addEventListener(MouseEvent.CLICK,getAccessTokenAndRefreshToken);
			}

			
			private var loader:URLLoader;
			
			private function onInitialize():void {
				alreadyAuthorised = Settings.getInstance().getSetting(Settings.SettingsAccessToken) != "";
				authorizationcodeTextAreaVisible = false;
				if (!alreadyAuthorised)
					topLabelText = resourceManager.getString('synchronizeview','synchronizewithgoogledocs');
				else 
					topLabelText = resourceManager.getString('synchronizeview','alreadyauthorized') + '\n' +
						resourceManager.getString('synchronizeview','synchronisationwillstart');
				
				back_label = resourceManager.getString('general','back');
				if (!alreadyAuthorised)
					buttonAuthenticateToGoogle.addEventListener(MouseEvent.CLICK,buttonClicked);

			}
			
			private function buttonClicked(event:MouseEvent):void {
				navigateToURL(new URLRequest("https://accounts.google.com/o/oauth2/auth?scope=https://www.googleapis.com/auth/fusiontables.readonly https://www.googleapis.com/auth/fusiontables https://spreadsheets.google.com/feeds https://docs.google.com/feeds&response_type=code&redirect_uri=urn:ietf:wg:oauth:2.0:oob&client_id=" + resourceManager.getString('client_secret','client_id') + "&hl=nl&from_login=1&as=6d24e440f72448b2&pli=1"));
				authorizationcodeTextAreaVisible = true;
				alreadyAuthorised = true;//not really true, but we want to hide the button
				topLabelText = resourceManager.getString('synchronizeview','copyauthorizationcode');
				buttonAuthenticateToGoogle.removeEventListener(MouseEvent.CLICK,buttonClicked);
			}
			
			private function authorizationcodeTextAreaClicked():void {
				authorizationCode_text = "";
			}
			
			private function getAccessTokenAndRefreshToken(event:MouseEvent):void {
				var request:URLRequest = new URLRequest(googleAuthUrl);
				request.contentType = "application/x-www-form-urlencoded";
				request.data = new URLVariables("code=" + authorizationCode_text + "&" + 
								"client_id=" + resourceManager.getString('client_secret','client_id') + "&" +
								"client_secret=" + resourceManager.getString('client_secret','client_secret') + "&" +
								"redirect_uri=urn:ietf:wg:oauth:2.0:oob" + "&" +
								"grant_type=authorization_code");
				request.method = URLRequestMethod.POST;
				loader = new URLLoader();
				loader.addEventListener(Event.COMPLETE,getAccessTokenAndRefreshTokenResult);
				loader.addEventListener(IOErrorEvent.IO_ERROR,getAccessTokenAndRefreshTokenFault);
				loader.load(request);
			}
			
			private function getAccessTokenAndRefreshTokenFault(event:IOErrorEvent):void {
				//refreshtoken failed
				loader.removeEventListener(ResultEvent.RESULT,getAccessTokenAndRefreshTokenResult);
				loader.removeEventListener(FaultEvent.FAULT,getAccessTokenAndRefreshTokenFault);
			}
			
			private function getAccessTokenAndRefreshTokenResult(event:Event):void {
				//hier is de refreshtoken gelukt.
				loader.removeEventListener(ResultEvent.RESULT,getAccessTokenAndRefreshTokenResult);
				loader.removeEventListener(FaultEvent.FAULT,getAccessTokenAndRefreshTokenFault);
				var temp:Object = JSON.parse(event.target.data as String);
				Settings.getInstance().setSetting(Settings.SettingsAccessToken,temp.access_token);
				Settings.getInstance().setSetting(Settings.SettingsRefreshToken,temp.refresh_token);
				topLabelText = resourceManager.getString('synchronizeview','alreadyauthorized') + '\n' +
					resourceManager.getString('synchronizeview','synchronisationwillstart');
				Synchronize.getInstance().startSynchronize(null,true);
			}
			
		]]>
	</fx:Script>
	<s:navigationContent>
		<s:Button   label="{back_label}" id="backButton" click="navigator.popView()" height="48"/>
	</s:navigationContent>
	<s:Group y="0" x="0" width="100%" left="5" top="5" right="5">
		<s:layout>
			<s:VerticalLayout>
			</s:VerticalLayout>
		</s:layout>
		<s:Label id="topLabel" y="0" x="0" width="100%" text="{topLabelText}" />
		<s:TextArea id="authorizationcodeTextArea" y="0" x="0" width="100%"  text="@{authorizationCode_text}" click="authorizationcodeTextAreaClicked()" visible="{authorizationcodeTextAreaVisible}"/>
		<s:Button id="buttonAuthenticateToGoogle" width="100%" label="{resourceManager.getString('synchronizeview','authenticatetogoogle')}" visible="{!alreadyAuthorised}"/>
		<s:Button id="buttonDownLoadFoodTable" width="100%" label="{resourceManager.getString('synchronizeview','authenticatetogoogle')}" visible="{!alreadyAuthorised}"/>
	</s:Group>
</s:View>

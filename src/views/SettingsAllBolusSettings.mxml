<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2013  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		initialize="init()"
		creationComplete="onCreationComplete()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.resources.ResourceManager;
			
			import spark.events.IndexChangeEvent;
			
			import model.ModelLocator;
			
			[Bindable]
			private var back_label:String;

			[ResourceBundle("settingsallbolussettingsview")]
			[ResourceBundle("synchronizeview")]
			
			private var menuList:ArrayCollection = 	new ArrayCollection([
				ResourceManager.getInstance().getString("settingsallbolussettingsview","bolus_calculation"),
				ResourceManager.getInstance().getString("settingsview","meal_times")
				
			]);	
			
			private function onBackKeyPressed(event:Event):void {
			}
			
			private function onCreationComplete(): void {
				back_label = resourceManager.getString('general','back');
				title = resourceManager.getString('settingsview','bolussettings');
			}
			private function init():void {
				/* add event listener for clicking item */
				settingsList.addEventListener(Event.CHANGE,selectedElementChanged);
				if (ModelLocator.getInstance().extendedFunctionsActive())
					menuList.addItem(ResourceManager.getInstance().getString("settingsallbolussettingsview","correction_factor_settings"));
				menuList.addItem(ResourceManager.getInstance().getString("synchronizeview","help"));
			}
			
			/**
			 * will popup a view corresponding to the selected menu
			 */
			private function selectedElementChanged(event:IndexChangeEvent):void {
				switch (event.newIndex) {
					case 0:
						navigator.pushView(SettingsBolusCalculationView);
						break;
					case 1:
						navigator.pushView(SettingsMealTimesView);
						break;
					case 2:
						navigator.pushView(SettingsAllCorrectionFactorSettingsView);
						break;
					case 3:
						navigateToURL(new URLRequest(resourceManager.getString('settingsallbolussettingsview','redirecturl')));
						break;
				}
			}
			
			
		]]>
	</fx:Script>
	<s:navigationContent>
		<s:Button   label="{back_label}" id="backButton" click="navigator.popView()" height="48"/>
	</s:navigationContent>
	<s:List id="settingsList" left="0" right="0" top="0" bottom="0" width="100%" itemRenderer="myComponents.MenuElementItemRenderer"
			dataProvider="{menuList}">
	</s:List>
</s:View>

<?xml version="1.0" encoding="utf-8"?>
<!--
copied from franto.com
-->										  
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" creationComplete="init()"
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="spark.components.*"
		 >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			private var _currentDate: Date;
			[Bindable]
			public function get currentDate(): Date
			{
				return _currentDate;
			}
			public function set currentDate(value: Date): void
			{
				_currentDate = value;
				updateDateParts();
			}
			
			[Bindable]
			public var day: int;
			[Bindable]
			public var month: int;
			[Bindable]
			public var year: int;
			
			
			private function init(): void
			{
			}
			private function updateDateParts(): void
			{
				day = currentDate.date;
				month = currentDate.month;
				year = currentDate.fullYear;
			}
			private function incrementDate(type: String): void
			{
				updateDate(type, 1);
			}
			private function decrementDate(type: String): void
			{
				updateDate(type, -1);
			}
			private function updateDate(type: String, value: int): void
			{
				currentDate = new Date(year, month, day);
				switch(type)
				{
					case 'day':
						day += value;
						break;
					case 'month':
						month += value;
						break;
					case 'year':
						year += value;
						break;
				}
				currentDate = new Date(year, month, day);
			}
			
			private function setDate(): void
			{
				var dpe: DatePickerEvent = new DatePickerEvent(DatePickerEvent.DATE_PICKER_SET);
				dpe.date = currentDate;
				dispatchEvent(dpe);
				PopUpManager.removePopUp(this);
			}
			private function cancelDate(): void
			{
				var dpe: DatePickerEvent = new DatePickerEvent(DatePickerEvent.DATE_PICKER_CANCEL);
				dispatchEvent(dpe);
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
	<s:BorderContainer backgroundColor="0x444444" width="100%" borderColor="0xcccccc" borderWeight="4" cornerRadius="10">
		
		<s:VGroup width="100%" gap="10" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
			<s:Label text="{currentDate.toDateString()}" width="100%" />
			<s:Line width="100%">
				<s:stroke>
					<s:SolidColorStroke color="0xcccccc" weight="2"/>
				</s:stroke>
			</s:Line>
			<s:HGroup width="100%">
				<s:VGroup gap="10" >
					<s:Button label="+" click="incrementDate('day')" width="100%"/>
					<s:Label text="{day}" width="100%" textAlign="center" />
					<s:Button label="-" click="decrementDate('day')" width="100%"/>
				</s:VGroup>
				<s:VGroup gap="10" >
					<s:Button label="+" click="incrementDate('month')" width="100%"/>
					<s:Label text="{month+1}" width="100%" textAlign="center" />
					<s:Button label="-" click="decrementDate('month')" width="100%"/>
				</s:VGroup>
				<s:VGroup gap="10" >
					<s:Button label="+" click="incrementDate('year')" width="100%"/>
					<s:Label text="{year}" width="100%" textAlign="center" />
					<s:Button label="-" click="decrementDate('year')" width="100%"/>
				</s:VGroup>
			</s:HGroup>
			<s:BorderContainer width="100%" backgroundColor="0xcccccc">
				<s:VGroup width="100%" verticalAlign="middle" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
					<s:Button width="100%" height="50%" label="Set" click="setDate()"/>
					<s:Button width="100%" height="50%" label="Cancel" click="cancelDate()"/>
				</s:VGroup>
			</s:BorderContainer>
		</s:VGroup>
	</s:BorderContainer>
</s:Group>

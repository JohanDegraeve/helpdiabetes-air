<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2013  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<!--
user wil enter a date
client needs to set currentDate, which is a timestamp in ms. User can only change year, month, date, but hour, minutes, seconds remains. ms will be set to zero
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 creationComplete="group1_creationCompleteHandler(event)"
		 implements="mx.managers.IFocusManagerContainer"
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="spark.components.*"
		 >
	<fx:Declarations>
		<s:DateTimeFormatter id="dayformatter" dateTimePattern="EEEE" useUTC="false" locale="{Capabilities.language.substr(0,2)}"/>
		<s:DateTimeFormatter id ="monthformatter" dateTimePattern="MMM" useUTC="false" locale="{Capabilities.language.substr(0,2)}"/>
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("general")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.core.ContainerGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.events.FlexEvent;
			import mx.managers.IFocusManagerContainer;
			import mx.managers.PopUpManager;
			import mx.resources.ResourceManager;
			
			import spark.components.calendarClasses.DateSelectorDisplayMode;

			private var _defaultButton:IFlexDisplayObject;
			
			public function get defaultButton():IFlexDisplayObject
			{
				return _defaultButton;
			}
			public function set defaultButton(value:IFlexDisplayObject):void
			{
				_defaultButton = value;
				ContainerGlobals.focusedContainer = null;
			}
			
			private var _currentDate: Date;
			[Bindable]
			public function get currentDate(): Date
			{
				return _currentDate;
			}
			public function set currentDate(value: Date): void
			{
				_currentDate = value;
			}
			
			private function setDate(): void
			{
				var dpe: PickerEvent = new PickerEvent(PickerEvent.PICKER_SET);
				dpe.newValue = dt.selectedDate;
				dispatchEvent(dpe);
				PopUpManager.removePopUp(this);
			}
			private function cancelDate(): void
			{
				var dpe: PickerEvent = new PickerEvent(PickerEvent.PICKER_CANCEL);
				dispatchEvent(dpe);
				PopUpManager.removePopUp(this);
			}
			
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				dt.selectedDate = _currentDate;
				//var temp:Object = Capabilities.language;
				dt.setStyle("locale",Capabilities.language);
			}
			
		]]>
	</fx:Script>
	<s:BorderContainer >
		
		<s:VGroup width="100%" gap="10" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
			<s:DateSpinner id="dt" displayMode="{DateSelectorDisplayMode.DATE}"/> 		
			<s:BorderContainer width="100%" backgroundColor="0xcccccc">
				<s:VGroup width="100%" verticalAlign="middle" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
					<s:Button width="100%" height="50%" minHeight="60" label="{resourceManager.getStringArray('general','ok')}" click="setDate()"/>
					<s:Button width="100%" height="50%" minHeight="60" label="{resourceManager.getStringArray('general','cancel')}" click="cancelDate()"/>
				</s:VGroup>
			</s:BorderContainer>
		</s:VGroup>
	</s:BorderContainer>
</s:Group>

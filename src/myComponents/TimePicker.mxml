<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2013  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<!--
user wil enter a time
client needs to set currentTime, which is a timestamp in ms. User can only change hour, minutes, seconds but year, month, date remains. ms will be set to zero
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 creationComplete="group1_creationCompleteHandler(event)"
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="spark.components.*"
		 >
	<fx:Declarations>
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("general")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import myComponents.PickerEvent;
			
			import spark.components.calendarClasses.DateSelectorDisplayMode;

			private var _currentTime: Date;
			[Bindable]
			public function get currentTime(): Date
			{
				return _currentTime;
			}
			public function set currentTime(value: Date): void
			{
				_currentTime = value;
			}
			
			/**
			 * maximum time to which user can set the new time 
			 */
			private var _maxTime:Date = new Date(32531915068000);
			
			/**
			 * maximum time to which user can set the new time 
			 */
			public function get maxTime():Date
			{
				return _maxTime;
			}
			
			/**
			 * maximum time to which user can set the new time 
			 */
			public function set maxTime(value:Date):void
			{
				_maxTime = value;
			}
			
			/**
			 * minimum time to which user can set the new time 
			 */
			private var _minTime:Date = new Date(0);
			
			/**
			 * minimum time to which user can set the new time 
			 */
			public function get minTime():Date
			{
				return _minTime;
			}
			
			/**
			 * minimum time to which user can set the new time 
			 */
			public function set minTime(value:Date):void
			{
				_minTime = value;
			}
			
			private function setTime(): void
			{
				var tpe: PickerEvent = new PickerEvent(PickerEvent.PICKER_SET);
				tpe.newValue = dt.selectedDate;
				dispatchEvent(tpe);
				PopUpManager.removePopUp(this);
			}
			private function cancelTime(): void
			{
				var tpe: PickerEvent = new PickerEvent(PickerEvent.PICKER_CANCEL);
				dispatchEvent(tpe);
				PopUpManager.removePopUp(this);
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				dt.setStyle("locale",Capabilities.language);
				
				dt.minDate = _minTime;
				dt.maxDate = _maxTime;
				dt.selectedDate = _currentTime;
			}
		]]>
	</fx:Script>
	<s:BorderContainer>
		
		<s:VGroup width="100%" gap="10" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
			<s:DateSpinner id="dt" displayMode="{DateSelectorDisplayMode.TIME}"/>
			<s:BorderContainer backgroundColor="0xcccccc" width="100%">
				<s:VGroup width="100%" verticalAlign="middle" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
					<s:Button height="50%" width="100%" minHeight="60" label="{resourceManager.getStringArray('general','ok')}" click="setTime()"/>
					<s:Button height="50%" width="100%" minHeight="60" label="{resourceManager.getStringArray('general','cancel')}" click="cancelTime()"/>
				</s:VGroup>
			</s:BorderContainer>
		</s:VGroup>
	</s:BorderContainer>
</s:Group>

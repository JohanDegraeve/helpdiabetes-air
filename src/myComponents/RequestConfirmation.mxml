<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2011  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="spark.components.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("general")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;

			/**
			 * two labels will be shown this is the first label 
			 */
			private var _labelText1:String;
			public function get labelText1():String
			{
				return _labelText1;
			}
			
			public function set labelText1(value:String):void
			{
				_labelText1 = value;
			}
			
			/**
			 * two labels will be shown this is the second label 
			 */
			private var _labelText2:String;
			public function get labelText2():String
			{
				return _labelText2;
			}
			
			public function set labelText2(value:String):void
			{
				_labelText2 = value;
			}
			
			private function yesClicked():void {
				dispatchEvent(new PickerEvent(PickerEvent.PICKER_SET));
				PopUpManager.removePopUp(this);
			}
			
			private function noClicked():void {
				dispatchEvent(new PickerEvent(PickerEvent.PICKER_CANCEL));
				PopUpManager.removePopUp(this);
			}
			
		]]>
	</fx:Script>

	<s:BorderContainer>
		<s:VGroup id="vgroup" width="100%" gap="10" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
			<s:Label includeInLayout="{labelText1 != ''}" text="{labelText1}" width="100%" styleName="textColorInPickerOnDarkBackground" />
			<s:Label includeInLayout="{labelText2 != ''}" text="{labelText2}" width="100%" styleName="textColorInPickerOnDarkBackground" />
			<s:Line width="100%">
				<s:stroke>
					<s:SolidColorStroke color="0xcccccc" weight="3"/>
				</s:stroke>
			</s:Line>
			<s:BorderContainer width="100%" backgroundColor="0xcccccc" minHeight="0">
				<s:HGroup width="100%" verticalAlign="middle" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
					<s:Button width="100%" height="100%" minHeight="60" minWidth="70" label="{resourceManager.getStringArray('general','yes')}" click="yesClicked()"/>
					<s:Button width="100%" height="100%" minHeight="60" minWidth="70" label="{resourceManager.getStringArray('general','no')}" click="noClicked()"/>
				</s:HGroup>
			</s:BorderContainer>
		</s:VGroup>
	</s:BorderContainer>
</s:Group>

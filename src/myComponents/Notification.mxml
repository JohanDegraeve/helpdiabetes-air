<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2013  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 implements="mx.managers.IFocusManagerContainer"
		 preinitialize="onPreInitialize()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.core.ContainerGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.managers.IFocusManagerContainer;
			import mx.managers.PopUpManager;			private var _defaultButton:IFlexDisplayObject;
			
			public function get defaultButton():IFlexDisplayObject
			{
				return _defaultButton;
			}
			public function set defaultButton(value:IFlexDisplayObject):void
			{
				_defaultButton = value;
				ContainerGlobals.focusedContainer = null;
			}
					
			private var _notificationText:String;
			
			[Bindable]

			public function get notificationText():String

			{
				return _notificationText;
			}
			
			public function set notificationText(value:String):void

			{
				_notificationText = value;
			}
			
			private function onPreInitialize():void {
				addEventListener(Event.REMOVED_FROM_STAGE,removedFromStageNotViaOkButton);
			}
			
			private function okClicked():void {
				removeEventListener(Event.REMOVED_FROM_STAGE,removedFromStageNotViaOkButton);
				PopUpManager.removePopUp(this);
				
				var dpe: PickerEvent = new PickerEvent(PickerEvent.PICKER_SET);
				dispatchEvent(dpe);
			}
			
			private function removedFromStageNotViaOkButton(event:Event):void {
				okClicked();
			}
			
		]]>
	</fx:Script>
	<s:BorderContainer>
		<s:VGroup id="vgroup" width="100%" gap="10" paddingBottom="10" paddingLeft="5" paddingRight="5" paddingTop="10">
			<s:Label id="notificationTextArea" text="{notificationText}" maxDisplayedLines="15" maxWidth="280" color="0xFFFFFF">
			</s:Label>
			<s:VGroup width="100%" verticalAlign="middle" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
				<s:Button width="100%" height="60" label="{resourceManager.getStringArray('general','ok')}" click="okClicked()"/>
			</s:VGroup>
		</s:VGroup>
	</s:BorderContainer> 
</s:Group>

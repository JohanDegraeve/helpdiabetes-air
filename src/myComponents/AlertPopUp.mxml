<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (C) 2013  hippoandfriends

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/gpl.txt>.

-->
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
						   xmlns:s="library://ns.adobe.com/flex/spark"
						   initialize="skinnablepopupcontainer1_initializeHandler(event)"
						   styleName="mystyle"
						   >

	<fx:Metadata>
		[ResourceBundle("general")]
	</fx:Metadata>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		.mystyle
		{
			backgroundAlpha:0.5;
			backgroundColor:black;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.components.View;
						
			private var activeView:View;
			private var _okButtonVisible:Boolean = true;

			[Bindable]
			public function get okButtonVisible():Boolean
			{
				return _okButtonVisible;
			}

			public function set okButtonVisible(value:Boolean):void
			{
				_okButtonVisible = value;
			}

			
			public function show(view:View):void
			{
				activeView = view;
				this.position();
				this.open(activeView, false);
				
			}
			
			public function setMessage(msg:String):void
			{
				alertMessageText.text = msg;
				alertMessageText.validateNow();
			}
			
			public function getMessage():String {
				return alertMessageText.text;
			}
			
			private function position(event:Event = null):void
			{
				this.width = HelpDiabetes.deviceScreenWidth;
				this.height = HelpDiabetes.deviceScreenHeight;
				
				this.x = 0;
				this.y = 0;
			}

			protected function skinnablepopupcontainer1_initializeHandler(event:FlexEvent):void
			{
				if (HelpDiabetes.isTablet())
					stage.addEventListener(StageOrientationEvent.ORIENTATION_CHANGE,position);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:VGroup  width="100%" height="100%" horizontalAlign="center">
		
		<s:TextArea id="alertMessageText" width="90%" height="80%" selectable="false" editable="false"
					x = "{HelpDiabetes.deviceScreenWidth * 0.1 / 2}" 
					y = "{HelpDiabetes.deviceScreenHeight * 0.2 / 2}"
					skinClass="spark.skins.mobile.TextAreaSkin"
					 verticalScrollPolicy="on"/>
		<s:Button label="{resourceManager.getString('general','ok')}" click="this.close()" visible="{okButtonVisible}"/>
		
	</s:VGroup>
	
</s:SkinnablePopUpContainer>